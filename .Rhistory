download.file("https://ndownloader.figshare.com/files/2292169", "../data/portal_data_joined.csv")
download.file("https://ndownloader.figshare.com/files/2292169", "data/portal_data_joined.csv")
# load the data
surveys <- read.csv('data/portal_data_joined.csv')
# load the data
surveys <- read.csv('data/portal_data_joined.csv')
surveys
#Examine the first 6 lines
head (surveys)
# look at the structure
str(surveys)
#Indexing and subsetting
surveys[1, 1]  #first element in the first colum
surveys[1, 6]  #first element in the first column
surveys[1:3, 7] # the elements in the first, second and the 7 column
surveys[ , 1]   # all the elements in the first column
surveys[8:11, ] # all the elements in the row 8,9,10, and 11
surveys[1:13, ]  # all the elemnets in row 1to 13 in all the column
surveys_200[200, ] #all the element in the row 200 of all the column
surveys_200[200] #all the element in the row 200 of all the column
surveys_200 <- surveys[200, ] # the element in the row 200 of all the column
nrow(surveys)
#Use that number to pull out just that last row in the data frame
n_row <- nrow(surveys)
surveys_last <- surveys[n_row, ]
surveys_last
#Compare that with what you see as the last row using tail() to make sure itâ€™s meeting expectations
tail(surveys)
#Use nrow() to extract the row that is in the middle of the data frame
middle_row <- nrow(surveys)/2
surveys_middle <- surveys[middle_row, ]
#Combine nrow() with the - notation above to reproduce the behavior of head(surveys),
#keeping just the first through 6th rows of the surveys dataset.
surveys_head <- surveys[-(7:n_row), ]
surveys_head
levels(sex)
sex <- factor(c("male", "female", "female", "male"))
levels(sex)
nlevels(sex)
plot(surveys$sex)
# how to create a subset of sex data
sex <- surveys$sex
levels(sex)
#how to ovewrite the missing label
levels(sex)[1] <- "Undetermined"
levels(sex)
#How to change labels
levels(sex)["F"] <- "M"
levels(sex)
levels(sex)[2] <- "M"
levels(sex)[3] <- "F"
levels(sex)
levels(sex)[2,3] <- c("Female", "Male")
levels(sex)[2,3] <- c("Female", "Male")
levels(sex)[2,3] <- c("M", "F")
levels(sex)["2"] <- "Male"
levels(sex)[2] <- "Male"
levels(sex)[3] <- "Female"
levels(sex)
plot(sex)
levels(sex)[2,3] <- c("Female", "Male")
levels(sex)[2,3] <- c('Female', 'Male')
#Reordering the position of all the factors to put 'undetermined' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
#Reordering the position of all the factors to put 'undetermined' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
plot(sex)
# how to create a subset of sex data
sex <- surveys$sex
plot(sex)
#how to ovewrite the missing label
levels(sex)[1] <- "Undetermined"
levels(sex)[2,3] <- c('Female', 'Male')
#Reordering the position of all the factors to put 'undetermined' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
levels(sex)[2:3] <- c('Female', 'Male')
#Reordering the position of all the factors to put 'undetermined' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
plot(sex)
# how to create a subset of sex data
sex <- surveys$sex
plot(sex)
levels(sex)
#how to ovewrite the missing label
levels(sex)[1] <- "Undetermined"
levels(sex)
levels(sex)[2,3] <- c("F", "M")
levels(sex)
levels(sex)[2:3] <- c('Female', 'Male')
levels(sex)
plot(sex)
#Reordering the position of all the factors to put 'undetermined' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
plot(sex)
#Installing Tidyverse
install.packages("tidyverse")
#load the library to make available to scripts
library("tidyverse")
#load the library to make available to scripts
library("tidyverse")
#load the survey data
surveys <- read.csv('data/portal_data_joined.csv')
#load the survey data
surveys <- read.csv('data/portal_data_joined.csv')
str(surveys)
head(surveys)
surveys
surveys
colnames(surveys)
head(surveys)
# use the square bracke subsetting to select rows from 1978 only
surveys[surveys$year = "1978", ]
# use the square bracke subsetting to select rows from 1978 only
surveys[surveys$year == "1978", ]
filter(surveys, year == 1978)
select(surveys, year, plot_id, species_id)
#select only the three columns but only from 1978
surveys_filtered <- filter(surveys, year == 1978)
surveys_filtered
select(surveys_filtered, year, plot_id, species_id )
surveys %>%
surveys %>%
filter(year == 1978) %>%
select(year, plot_id, species_id)
surveys %>%
filter(year == 1978) %>%
select(year, plot_id, species_id)
surveys %>%
filter(year == 1978) %>%
select(year, plot_id, species_id)
#how to creat a new column and add to the object-mutate
surveys %>%
select(weight, species)
surveys %>%
mut
surveys %>%
mutate(weight_kg = weight/1000)
select(starts_with("w"))
surveys %>%
mutate(weight_kg = weight/1000)
select(starts_with("w"))
surveys %>%
mutate(weight_kg = weight/1000)
surveys %>%
mutate(weight_kg = weight/1000)
select(starts_with("w"))
select(starts_with("w"))
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with("w"))
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with("w"))
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with("w"))
#challenge
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
filter(hindfoot_half < 30) %>%
select(species_id, hindfoot_half)
#challenge
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
filter(hindfoot_half < 30) %>%
select(species_id, hindfoot_half)
#challenge
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
filter(hindfoot_half < 30) %>%
select(species_id, hindfoot_half)
surveys %>%
mutatet(weight_kg = weight/1000) %>%
select(starts_with('w')) %>%
filter(!ls,na(weight))# filters out rows in column weight taht are not na (missing data)
surveys %>%
mutatet(weight_kg = weight/1000) %>%
select(starts_with('w')) %>%
filter(!ls,na(weight))# filters out rows in column weight taht are not na (missing data)
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with('w')) %>%
filter(!ls,na(weight))# filters out rows in column weight taht are not na (missing data)
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with('w')) %>%
filter(!ls,na(weight))# filters out rows in column weight taht are not na (missing data)
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with('w')) %>%
filter(!ls,na(weight))# filters out rows in column weight taht are not na (missing data)
summary(surveys)
length(table(surveys$year))
range(surveys$year)
surveys %>%
group_by(year) %>%
sum
surveys %>%
group_by(year) %>%
summarise(mean)
surveys %>%
group_by(year) %>%
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length, na.rm = TRUE)
>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length, na.rm = TRUE))
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length, na.rm = TRUE))
surveys %>%
group_by(sex, species_id)
surveys %>%
filter(!ls,na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight), min_weight = min(weight), sd_weight = sd(weight))
surveys %>%
filter(!ls,na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight), min_weight = min(weight), sd_weight = sd(weight))
surveys %>%
filter(!ls,na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight),
min_weight = min(weight),
sd_weight = sd(weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight),
min_weight = min(weight),
sd_weight = sd(weight))
surveys %>%
count(sex)
surveys %>%
count(sex, species)
surveys %>%
count(sex, species) %>%
print(n = 81)
surveys %>%
count(species, sort = TRUE)
surveys %>%
count(species, sort = TRUE)
surveys %>%
count(sex, species) %>%
arrange(species, desc(n))
surveys %>%
count(plot_type)
surveys %>%
group_by(plot_type)
surveys %>%
group_by(plot_type)
surveys %>%
group_by(plot_type) %>%
tally()
surveys %>%
group_by(year) %>%
summarise(max_weight = max(weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
summarise(max_weight = max(weight)) %>%
arrange(desc(max_weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight) %>%
arrange(desc(weight))
surveys %>%
filter(!is.na(weight)) %>%
#group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight) %>%
arrange(desc(weight))
surveys_complete <-
surveys %>%
filter(!is.na(weight), !is.na(hindfoot_length), !is.na(sex))
#keep the species for which there are at least 50 observations
species_counts <- surveys_complete %>%
count(species_id) %>%
filter(n >- 50)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% numerous_species)
numerous_species <- species_counts$species_id
surveys_complete <-
surveys_complete %>%
filter(species_id %in% numerous_species)
dim(surveys_complete)
write_csv(surveys_complete, 'data/surveys_complete.csv')
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length))
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
surveys_plot <- ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
surveys_plot + geom_point()
surveys_plot <- ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
surveys_complete %>%
count(species_id) %>%
fiter(n >- 1000)
library(tidyverse)
library(tidyverse)
surveys_complete %>%
count(species_id) %>%
fiter(n >- 1000)
surveys_complete %>%
count(species_id) %>%
fiter(n >= 1000)
surveys_complete %>%
count(species_id) %>%
filter(n >= 1000)
animals <- c("pig", "cat", "dog", "donkey", "gorilla", "mouse")
other_animals <- c(animals, 'zebra', 'parrot', 'camel')
animals <- c(animals, 'zebra', 'parrot', 'camel')
animals
animals
other_animals
animals %in% other_animals
other_animals %in% animals
intersect(animals, other_animals)
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
surveys_plot <- ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point(alpha = 0.1, colour = 'blue')
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
geom_point(alpha = 0.1, aes(color = species_id))
#distribution box plot
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_boxplot(alpha = 0.1, aes(color = species_id))
#distribution box plot
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_boxplot()
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_boxplot() +geom_jitter(alpha = 0.1 , colour = 'red')
yearly_counts <-
surveys_complete %>%
group_by(year, species_id) %>%
tally()
surveys_complete %>%
group_by(year, species_id) %>%
tally()
ggplot(data = yearly_counts, mapping = aes(x = year, y = n)) + geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year, y = n, group = species_id)) + geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year, y = n, group = species_id)) + geom_line(colour = species_id)
ggplot(data = yearly_counts, mapping = aes(x = year, y = n, colour = species_id)) + geom_line()
+ geom_line() + facet_wrap(~ species_id)
+ geom_line() + facet_wrap(~species_id)
+ geom_line() + facet_wrap(~species_id)
ggplot(data = yearly_counts, mapping = aes(x = year, y = n)) + geom_line() + facet_wrap(~species_id)
ggplot(data = yearly_counts, mapping = aes(x = year, y = n)) + geom_line() + facet_wrap(~ species_id)
yearly_counts
yearly_sex_counts <- surverys_complete %>%
group_by(year, species_id, sex) %>%
tally()
yearly_sex_counts <- surverys_complete %>%
group_by(year, species_id, sex) %>%
tally()
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_counts, mapping = aes(x = year, y = n, colour = species_id)) + geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year, y = n)) + geom_line()
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
yearly_sex_counts
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
yearly_sex_counts
#keep the species for which there are at least 50 observations
species_counts <- surveys_complete %>%
count(species_id) %>%
filter(n >= 50)
surveys_complete %>%
filter(species_id %in% numerous_species)
numerous_species <- species_counts$species_id
surveys_complete <-
surveys_complete %>%
filter(species_id %in% numerous_species)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id)
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id) + ggtitle("Species counts over time")
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id) + labs(title = "Species counts over time", x = "year of observation", y= " Number of species")
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, colour = sex)) + geom_line() + facet_wrap(~ species_id) + labs(title = "Species counts over time", x = "year of observation", y= " Number of species") + theme(axis.text = element_text(angle = 45))
ggsave('data/my_fancy_plot.png', width = 15, height = 15, dpi = 300)
